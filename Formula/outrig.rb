# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Outrig < Formula
  desc "Observability monitor for Go programs during development time"
  homepage "https://github.com/outrigdev/outrig"
  version "0.8.3"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/outrigdev/outrig/releases/download/v0.8.3/outrig_0.8.3_Darwin_x86_64.tar.gz"
      sha256 "68799bcaa3b5d04b1c1d4ad39c22b37a7cf28ebeb0edde20495587dec2b4442d"

      def install
        bin.install "outrig"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/outrigdev/outrig/releases/download/v0.8.3/outrig_0.8.3_Darwin_arm64.tar.gz"
      sha256 "6061b9e9cc4288c77190fe26248877ac8079fe9ae03d8b92c4ace25302d34ec8"

      def install
        bin.install "outrig"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/outrigdev/outrig/releases/download/v0.8.3/outrig_0.8.3_Linux_x86_64.tar.gz"
        sha256 "0b76d17ff1c22cafde664fde95337db804b245fc36c0c151bad2bf65d8613c61"

        def install
          bin.install "outrig"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/outrigdev/outrig/releases/download/v0.8.3/outrig_0.8.3_Linux_arm64.tar.gz"
        sha256 "f0b9b312913828f5c0b16839e8c0fe3c62a1720dd5f70712d7140a7ff759c67b"

        def install
          bin.install "outrig"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Outrig has been installed successfully!

      Quick start and docs:
      https://outrig.run/docs/quickstart

      To start the Outrig server manually (foreground):
        outrig server

      To load and start Outrig as a background service (recommended):
        brew services start outrig

      ---
      Outrig is open source and free for individual users.
      If you find it useful, please star us on GitHub:
        https://github.com/outrigdev/outrig
      ---
    EOS
  end

  service do
    run [opt_bin/"outrig", "server"]
    keep_alive false
    log_path var/"log/outrig.log"
    error_log_path var/"log/outrig.log"
    working_dir var
  end

  test do
    system "#{bin}/outrig", "version"
  end
end
