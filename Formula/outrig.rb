# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Outrig < Formula
  desc "Observability monitor for Go programs during development time"
  homepage "https://github.com/outrigdev/outrig"
  version "0.5.6"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/outrigdev/outrig/releases/download/v0.5.6/outrig_0.5.6_Darwin_x86_64.tar.gz"
      sha256 "d39d77f4d2d3e1a1838736d9c6c221bed9dbbd7b1ab9ec59c777a24701dbe772"

      def install
        bin.install "outrig"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/outrigdev/outrig/releases/download/v0.5.6/outrig_0.5.6_Darwin_arm64.tar.gz"
      sha256 "dcac0c454163f0531f5873f93d700d4fc87f01c36e6dbbb326d4df47ba0e4e6f"

      def install
        bin.install "outrig"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/outrigdev/outrig/releases/download/v0.5.6/outrig_0.5.6_Linux_x86_64.tar.gz"
        sha256 "9a52c059b2412ea98099b83e0e0c167e9705ab1d0074aa16d09434612c8f527b"

        def install
          bin.install "outrig"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/outrigdev/outrig/releases/download/v0.5.6/outrig_0.5.6_Linux_arm64.tar.gz"
        sha256 "23c37e72c66f8d3b9ec92d610d9122589b3c81207a8f3a589ca5c85aa830ebab"

        def install
          bin.install "outrig"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Outrig has been installed successfully!

      Quick start and docs:
      https://outrig.run/docs/quickstart

      To start the Outrig server manually (foreground):
        outrig server

      To load and start Outrig as a background service (recommended):
        brew services start outrig

      ---
      Outrig is open source and free for individual users.
      If you find it useful, please star us on GitHub:
        https://github.com/outrigdev/outrig
      ---
    EOS
  end

  service do
    run [opt_bin/"outrig", "server"]
    keep_alive false
    log_path var/"log/outrig.log"
    error_log_path var/"log/outrig.log"
    working_dir var
  end

  test do
    system "#{bin}/outrig", "version"
  end
end
